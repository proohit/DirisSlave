# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew clean installDist
    - name: create Config File
      run: sh ./scripts/createConfig.sh ${{ secrets.JDATOKEN }}
    - name: FTP Deploy
      uses: SamKirkland/FTP-Deploy-Action@3.0.0
      with:
        # Deployment destination server & path. Formatted as protocol://domain.com:port/full/destination/path/
        ftp-server: sftp://${{ secrets.host }}:${{ secrets.sftpport }}${{ secrets.destination }}
        # FTP account username
        ftp-username: ${{ secrets.username }}
        # FTP account password
        ftp-password: ${{ secrets.password }}
        git-ftp-args: --insecure
        local-dir: ./build/install/DirisSlave
    - name: SSH Commands
      uses: appleboy/ssh-action@v0.0.7
      with:
        host: ${{ secrets.host }}
        port: ${{ secrets.sshport }}
        username: ${{ secrets.username }}
        password: ${{ secrets.password }}
        script: supervisorctl restart discordbot
